(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{341:function(e,t,a){"use strict";a.r(t);var r=a(6),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"future-work-ðŸš§"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#future-work-ðŸš§"}},[e._v("#")]),e._v(" Future Work ðŸš§")]),e._v(" "),a("p",[e._v("Details on issues and improvements that should be addressed, and speculate about other uses for the software.")]),e._v(" "),a("ul",[a("li",[e._v("Graphics API abstraction, could port to Vulkan/Metal/DirectX/OpenGL-ES")]),e._v(" "),a("li",[e._v("OS Platform abstraction (maybe glutin/winit handles a lot of that)")]),e._v(" "),a("li",[e._v("Separate window/rendering thread")]),e._v(" "),a("li",[e._v("Vertex Arrays have a lot of nonsense hard coded stuff")]),e._v(" "),a("li",[e._v("G-buffer/frame-buffers could do with a refactor")]),e._v(" "),a("li",[e._v("Shaders should be loaded from disk")]),e._v(" "),a("li",[e._v("Add actual docs, tests, and benchmarks")]),e._v(" "),a("li",[e._v("Once this is an acceptable renderer, I might add more game engine features. Maybe try and make a small game")])])])}),[],!1,null,null,null);t.default=s.exports}}]);