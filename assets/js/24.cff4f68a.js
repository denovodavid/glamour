(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{346:function(e,t,r){"use strict";r.r(t);var s=r(6),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"technology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#technology"}},[e._v("#")]),e._v(" Technology")]),e._v(" "),r("h2",{attrs:{id:"rust"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rust"}},[e._v("#")]),e._v(" Rust")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.rust-lang.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rust"),r("OutboundLink")],1),e._v(" is a systems prorgramming language that guarantees memeroy safety at compile time. Rust doesn't need a garbage collector so the performance is excellent with little to no overhead. There is zero-cost bidirectional interopability with C via the FFI; a basic requirement for communicating with OpenGL on the system. The modern Rust toolchain makes it trivial to have a fast and friendly developer experience.")]),e._v(" "),r("h2",{attrs:{id:"opengl"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#opengl"}},[e._v("#")]),e._v(" OpenGL")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.opengl.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenGL"),r("OutboundLink")],1),e._v(" is the go-to cross-platform graphics API with a wealth of learning resources available. Using OpenGL and Rust enables the application to run on Windows, Mac OS, and Linux without much platform specific thought. OpenGL "),r("code",[e._v("4.1")]),e._v(" is minumum target version as that is the latest version supported on Mac OS. Vulkan was considered, but due the increased complexity of properly implementing a Vulkan based application, OpenGL was the simpler choice.")]),e._v(" "),r("h2",{attrs:{id:"vs-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vs-code"}},[e._v("#")]),e._v(" VS Code")]),e._v(" "),r("p",[e._v("Continuing with cross-platform tools, "),r("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("VS Code"),r("OutboundLink")],1),e._v(" is the text-editor/IDE of choice. Using the excellent "),r("a",{attrs:{href:"https://rust-analyzer.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rust-analyzer"),r("OutboundLink")],1),e._v(" extension, it's a decent Rust IDE. With various other extensions, writing shader code and documentation is also pleasant.")]),e._v(" "),r("h2",{attrs:{id:"github"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[e._v("#")]),e._v(" GitHub")]),e._v(" "),r("p",[e._v("Several services on "),r("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),r("OutboundLink")],1),e._v(" are used:")]),e._v(" "),r("ul",[r("li",[e._v("It's the main git remote repository for the code")]),e._v(" "),r("li",[e._v("Issues are tracked on there")]),e._v(" "),r("li",[e._v("Projects, labels, and milestones help triage those issues")]),e._v(" "),r("li",[e._v("Actions are used to build and test the code (CI)")]),e._v(" "),r("li",[e._v("Pages is used to host this website which is deployed from Actions (CD).")])]),e._v(" "),r("h2",{attrs:{id:"vuepress"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vuepress"}},[e._v("#")]),e._v(" Vuepress")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vuepress"),r("OutboundLink")],1),e._v(" is a static site generator particularly designed for writing technical documentation. It is what powers this website.")])])}),[],!1,null,null,null);t.default=a.exports}}]);